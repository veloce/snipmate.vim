# Interface
snippet interface
	<?php

	namespace ${1:};

	/**
	 * ${3:Interface documentation}
	 *
	 * @author     `g:snips_author`
	 */
	interface ${2:`Filename('', 'myClass')`}
	{
	    ${4}
	}
# Class
snippet class
	<?php

	namespace ${1:};

	/**
	 * ${3:Class documentation}
	 *
	 * @author     `g:snips_author`
	 */
	class ${2:`Filename('', 'myClass')`}
	{
		${4}
	}
snippet cv
	/**
	 * ${3:Variable comment}
	 *
	 * @var ${4:string}
	 */
	${1:protected} $${2:};

	${6}
	/**
	 * @return $4
	 */
	public function get${5:}()
	{
		return $this->$2;
	}

	/**
	 * @param  $4
	 * @return null
	 */
	public function set$5($$2)
	{
	    $this->$2 = $$2;
	}

snippet php
	<?php ${1} ?>
snippet phpe
	<?php echo ${1} ?>
# getters and setters
snippet vd
	var_dump(${1:var});${2}
snippet while
	while (${1:/* condition */}) {
		${2:// code...}
	}
# do ... while
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
snippet if
	if (${1:/* condition */}) {
		${2}
	}
snippet ife
	if (${1:/* condition */}) {
		${2}
	} else {
		${3}
	}
	${4}
snippet else
	else {
		${1}
	}
snippet elseif
	elseif (${1:/* condition */}) {
		${2}
	}
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
snippet case
	case '${1:value}':
		${2:// code...}
		break;${3}
snippet for
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4: // code...}
	}
snippet foreach
	foreach ($${1:variable} as $${2:key}) {
		${3:// code...}
	}
snippet fun
	${1:public }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}
snippet rr
	array(${1})${2}	
snippet arr
	array('${1}' => ${2})${3}
